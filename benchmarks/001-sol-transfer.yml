id: 001-sol-transfer
description: A simple SOL transfer from one wallet to another to test basic tool selection and parameterization.
tags: ["system-program", "transfer", "t2"]

# Defines the on-chain state at the beginning of the test.
# Placeholders like USER_WALLET_PUBKEY will be replaced by the test runner.
initial_state:
  - pubkey: "USER_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111" # System Program
    lamports: 1000000000 # 1 SOL

  - pubkey: "RECIPIENT_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111" # System Program
    lamports: 0

# The natural language prompt given to the agent.
prompt: "Please send 0.1 SOL to the recipient (RECIPIENT_WALLET_PUBKEY)."

# The objective criteria for judging the agent's performance.
ground_truth:
  # A list of on-chain conditions that must be true after the agent has finished.
  final_state_assertions:
    - type: SolBalance
      pubkey: "RECIPIENT_WALLET_PUBKEY"
      expected: 100000000 # 0.1 SOL
      weight: 1.0

    # Note: Checking the sender's balance is tricky due to variable fees.
    # A more robust check would be 'balance_less_than' or 'balance_change_approx'.
    # For this simple case, we'll assume a fixed fee of 5000 lamports.
    - type: SolBalance
      pubkey: "USER_WALLET_PUBKEY"
      expected: 899995000 # 1 SOL - 0.1 SOL - 0.000005 SOL fee
      weight: 1.0

  # The ideal raw Solana instruction(s) the agent should generate.
  expected_instructions:
    - program_id: "11111111111111111111111111111111" # System Program
      program_id_weight: 1.0
      accounts:
        - pubkey: "USER_WALLET_PUBKEY"
          is_signer: true
          is_writable: true
          weight: 1.0
        - pubkey: "RECIPIENT_WALLET_PUBKEY"
          is_signer: false
          is_writable: true
          weight: 1.0
      # Instruction data for a System Program transfer:
      # Instruction data is not scored for this benchmark.
      # The on-chain state assertion is the ground truth for the amount.
      data: "..."
