id: 100-JUP-SWAP-SOL-USDC
description: A benchmark to test a swap from native SOL to real USDC using a simulated Jupiter V6 Swap interaction.
tags: ["jupiter", "swap", "sol", "usdc", "surfpool"]

initial_state:
  # User's main wallet with 2 SOL.
  - pubkey: "USER_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111" # System Program
    lamports: 2000000000 # 2 SOL

  # User's Associated Token Account (ATA) for the REAL USDC, starting with a zero balance.
  # This account will be created by the test runner.
  # surfpool will fetch the mint account data from mainnet automatically.
  - pubkey: "USER_USDC_ATA"
    owner: "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA" # Token Program
    lamports: 2039280 # Rent
    data: '{"mint": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v", "owner": "USER_WALLET_PUBKEY", "amount": 0}'

prompt: "Using Jupiter, swap 0.1 SOL for USDC. My wallet is USER_WALLET_PUBKEY and my USDC token account is USER_USDC_ATA."

ground_truth:
  final_state_assertions:
    # The exact final SOL balance is non-deterministic due to transaction fees.
    # We assert that the balance has decreased by at least 0.1 SOL (100,000,000 lamports).
    # A slightly larger amount is used to account for potential fees.
    - type: SolBalanceChange
      pubkey: "USER_WALLET_PUBKEY"
      expected_change_gte: -100005000

    # The exact output amount of USDC is non-deterministic.
    # We assert that the balance is greater than 0, confirming a successful swap.
    - type: TokenAccountBalance
      pubkey: "USER_USDC_ATA"
      expected_gte: 1

  # The expected instruction is complex and dynamically generated by the Jupiter API.
  # This serves as a structural placeholder.
  expected_instruction:
    program_id: "JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4" # Jupiter v6
    accounts:
      - pubkey: "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA" # Token Program
        is_signer: false
        is_writable: false
      - pubkey: "USER_WALLET_PUBKEY" # User's wallet, the authority
        is_signer: true
        is_writable: true
      - pubkey: "USER_USDC_ATA" # User's destination ATA
        is_signer: false
        is_writable: true
    data: "..." # Placeholder
