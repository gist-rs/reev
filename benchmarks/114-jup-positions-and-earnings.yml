id: 114-jup-positions-and-earnings
description: Multi-step flow to fetch Jupiter lending positions and then get detailed earnings information.
tags: ["jupiter", "positions", "earnings", "portfolio", "api", "comprehensive"]

initial_state:
  # User's main wallet with 2 SOL for transaction fees.
  - pubkey: "USER_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111" # System Program
    lamports: 2000000000 # 2 SOL

prompt: "Can you check my Jupiter lending positions and show me how much I've earned? I'd like to see both my current positions and the earnings from them. Please use the jupiter_earn tool to get this information."

ground_truth:
  min_score: 0.6

  # Since this is an API-based benchmark, we don't check on-chain state
  final_state_assertions:
    - type: SolBalance
      pubkey: "USER_WALLET_PUBKEY"
      expected: 2000000000 # Should remain unchanged for API-only benchmark
      weight: 1.0

  # Expected API call for jupiter_earn tool with both operations
  expected_api_calls:
    - service: "jupiter_positions"
      method: "GET"
      endpoint_pattern: "lite-api.jup.ag/lend/v1/earn/positions"
      expected_params: ["users"]
      weight: 0.2
      critical: true
    - service: "jupiter_earnings"
      method: "GET"
      endpoint_pattern: "lite-api.jup.ag/lend/v1/earn/earnings"
      expected_params: ["user"]
      weight: 0.2
      critical: true

  # Verify both responses have correct structure
  response_validation:
    - field: "result.data.positions.total_positions"
      type: "number"
      min_value: 0
      weight: 0.25
    - field: "result.data.positions.summary"
      type: "array"
      weight: 0.25
    - field: "result.data.earnings.total_positions"
      type: "number"
      min_value: 0
      weight: 0.25
    - field: "result.data.earnings.summary"
      type: "object"
      weight: 0.25

  # Expected data structure from jupiter_earn tool with both operations
  expected_data_structure:
    - path: "$.result.data.positions.summary[*].token.symbol"
      type: "string"
      expected_values:
        ["jlUSDC", "jlUSDT", "jlSOL", "jlEURC", "jlUSDS", "jlUSDG"]
      weight: 0.125
    - path: "$.result.data.positions.summary[*].rates.supply_rate_pct"
      type: "number"
      min_value: 0
      weight: 0.125
    - path: "$.result.data.earnings.summary.total_earnings.decimal"
      type: "number"
      min_value: 0
      weight: 0.125
    - path: "$.result.data.earnings.positions[*].position_address"
      type: "string"
      weight: 0.125

  success_criteria:
    - type: "steps_completed"
      description: "Single tool call with both operations must be completed successfully"
      required: 1
      weight: 0.4

    - type: "api_calls_success"
      description: "Both Jupiter APIs must be called successfully via single tool call"
      required: true
      weight: 0.3

    - type: "data_completeness"
      description: "Both positions and earnings data should be complete and properly formatted"
      required: true
      weight: 0.3

  # Tool execution validation for single call
  tool_validation:
    - step: 1
      tool_name: "jupiter_earn"
      required: true
      expected_params: ["user_pubkey", "operation"]
      success_indicators:
        - "result"
        - "data"
        - "positions"
        - "earnings"
      weight: 0.8
      critical: true

  # Skip instruction validation for this API-based benchmark
  skip_instruction_validation: true
