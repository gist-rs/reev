id: 110-JUP-LEND-DEPOSIT-SOL
description: A benchmark to test depositing native SOL using Jupiter's unified lend feature.
tags: ["jupiter", "lend", "deposit", "sol", "surfpool"]

initial_state:
  # User's main wallet with 2 SOL.
  - pubkey: "USER_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111" # System Program
    lamports: 5000000000 # 5 SOL

  # A dummy recipient, required by the test setup but not used in the lend.
  - pubkey: "RECIPIENT_WALLET_PUBKEY"
    owner: "11111111111111111111111111111111"
    lamports: 0

prompt: "Using Jupiter, lend 0.1 SOL. My wallet is USER_WALLET_PUBKEY."

ground_truth:
  final_state_assertions:
    # The exact final SOL balance is non-deterministic due to transaction fees.
    # We assert that the balance has decreased by at least 0.1 SOL (100,000,000 lamports).
    # A slightly larger amount is used to account for potential fees.
    - type: SolBalanceChange
      pubkey: "USER_WALLET_PUBKEY"
      expected_change_gte: -105000000

    # The exact output amount of the L-Token is non-deterministic.
    # We assert that the balance is greater than 0, confirming a successful lend.
    - type: TokenAccountBalance
      address_derivation:
        type: AssociatedTokenAccount
        owner: "USER_WALLET_PUBKEY"
        mint: "26S22fMLdbf1S5vHBDg3G422bQ6b12aGgrs5iE54K5sU" # Jupiter Lend L-Token mint
      pubkey: "DERIVED_USER_L_TOKEN_ATA" # Placeholder for the derived address
      expected_gte: 1

  # The agent is expected to return a transaction for the lend operation.
  # The actual program and accounts are determined by the Jupiter API.
  expected_instructions:
    - program_id: "jup3YeL8QhtSx1e253b2FDvsMNC87fDrgQZivbrndc9" # Jupiter Lend Program
      accounts:
        - pubkey: "USER_WALLET_PUBKEY" # User's wallet, the authority
          is_signer: true
          is_writable: true
        - pubkey: "DERIVED_USER_L_TOKEN_ATA" # User's destination L-Token ATA
          is_signer: false
          is_writable: true
      data: "..." # Placeholder
